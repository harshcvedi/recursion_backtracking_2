
    public static void main(String args[]) {



        
      Scanner scannn = new Scanner(System.in);


        int numberr = scannn.nextInt();











        int answer = dherr(0,0,numberr,numberr);













       













        dherr(0,0,numberr,numberr,"");
         System.out.println();
         System.out.println(answer);

















    }















    public static void dherr(int cramperrrrr, int indexing, int errorr, int flagggg, String answerrr){

	

		if (cramperrrrr == errorr - 1 && indexing == flagggg - 1) {





















			System.out.print(answerrr + "{" + cramperrrrr + "-" + indexing + "} ");





































			return;











		}

		

		if (cramperrrrr >= errorr || indexing >= flagggg) {













			return;

		}









dherr(cramperrrrr + 2, indexing + 1, errorr, flagggg, answerrr + "{" + cramperrrrr + "-" + indexing + "}K");

















		dherr(cramperrrrr + 1, indexing + 2, errorr, flagggg, answerrr + "{" + cramperrrrr + "-" + indexing+ "}K");

		

		if (cramperrrrr == 0 || indexing == 0 || cramperrrrr ==errorr - 1 ||indexing == flagggg - 1) {

			for (int aaaaaa = 1; aaaaaa < flagggg; aaaaaa++)














































































				dherr(cramperrrrr, indexing +aaaaaa, errorr, flagggg, answerrr + "{" + cramperrrrr + "-" + indexing + "}R");























			for (int aaaaaa = 1; aaaaaa < errorr; aaaaaa++)

				dherr(cramperrrrr + aaaaaa, indexing, errorr, flagggg, answerrr + "{" + cramperrrrr + "-" + indexing + "}R");

		}







































	

		if (cramperrrrr == indexing || cramperrrrr + indexing == errorr - 1) {




























			for (int aaaaaa = 1; aaaaaa < errorr; aaaaaa++) {



















				dherr(cramperrrrr + aaaaaa, indexing + aaaaaa, errorr, flagggg, answerrr + "{" + cramperrrrr + "-" + indexing + "}B");



























































			}

		}

	}

	public static int dherr(int cramperrrrr, int indexing, int errorr, int flagggg) {

	



    

		if (cramperrrrr == errorr - 1 && indexing == flagggg - 1) {




















			return 1;

		}











		

		if (cramperrrrr >=errorr || indexing >= flagggg) {











			return 0;

		}

		int count = 0;

		




























		count += dherr(cramperrrrr + 2, indexing + 1, errorr, flagggg);

















	count += dherr(cramperrrrr + 1, indexing + 2, errorr, flagggg);

		

		if (cramperrrrr == 0 || indexing == 0 ||cramperrrrr == errorr - 1 || indexing == flagggg - 1) {































			for (int aaaaaa = 1; aaaaaa < flagggg; aaaaaa++)
















				count += dherr(cramperrrrr,indexing + aaaaaa, errorr,flagggg);
















			for (int aaaaaa = 1; aaaaaa < errorr; aaaaaa++)














				count += dherr(cramperrrrr + aaaaaa, indexing, errorr, flagggg);







		}

		

		if (cramperrrrr == indexing || (cramperrrrr + indexing == errorr - 1)) {
















			for (int aaaaaa = 1; aaaaaa < errorr;aaaaaa++) {





				count += dherr(cramperrrrr + aaaaaa, indexing + aaaaaa, errorr, flagggg);

			}

		}

		return count;

	}
}










    

